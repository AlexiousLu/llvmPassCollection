cmake_minimum_required(VERSION 3.22)

project(DefaultExec)

include("../Common/cmake/common_cmake.cmake")

set(REQUIRED_PACKAGES ModuleLoader)
set(REQUIRED_PACKAGES_INCLUDE "")
list(TRANSFORM REQUIRED_PACKAGES PREPEND ../ OUTPUT_VARIABLE REQUIRED_PACKAGES_INCLUDE)
list(TRANSFORM REQUIRED_PACKAGES_INCLUDE APPEND /include)


set(IncludeDir
  ${REQUIRED_PACKAGES_INCLUDE}
  ../Common/include
  ./include
)
include_directories(${IncludeDir})
message(STATUS "Found Include Path: ${IncludeDir}")

# build directory have some cpp file, so only find src file in src folder.
file(GLOB_RECURSE SourceCodes
  "src/*.cc" "src/*.cpp" "src/*.cxx"
)
message(STATUS "Found SourceCodes: ${SourceCodes}")

# Build executable. link library needed in target_link_libraries

link_directories(../Lib)
add_executable(${CMAKE_PROJECT_NAME} ${SourceCodes})
target_link_libraries(${CMAKE_PROJECT_NAME} 
  PUBLIC
  "$<LINK_GROUP:RESCAN,${REQUIRED_PACKAGES}>" # no need to handle the dependency of requried_packages
  ${LLVM_COLLECTION}
)
